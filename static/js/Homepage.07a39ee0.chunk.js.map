{"version":3,"sources":["components/HomePage/HomePage.js","components/services/api.js","components/HomePage/HomePage.module.css"],"names":["HomePage","useState","movies","setMovies","location","useLocation","useEffect","moviesAPI","fetchTrendingMovieForHomepage","then","res","className","s","title","list","map","poster_path","id","item","link","to","pathname","state","from","src","alt","width","height","axios","defaults","baseURL","params","api_key","language","api","a","config","url","data","results","Error","fetchMovies","query","fetchMovieDetails","movie_id","fetchMovieCast","cast","fetchReviewsMovie","module","exports"],"mappings":"2PAOe,SAASA,IAAY,IAAD,EACLC,mBAAS,IADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KAG3BC,EAAWC,cAMjB,OAJAC,qBAAU,WACRC,IAAUC,gCAAgCC,MAAK,SAAAC,GAAG,OAAIP,EAAUO,QAC/D,IAGD,qCACE,mBAAGC,UAAWC,IAAEC,MAAhB,4BACA,oBAAIF,UAAWC,IAAEE,KAAjB,SACGZ,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,YAAaH,EAAhB,EAAgBA,MAAOI,EAAvB,EAAuBA,GAAvB,OACV,oBAAaN,UAAWC,IAAEM,KAA1B,SACE,eAAC,IAAD,CACEP,UAAWC,IAAEO,KACbC,GAAI,CACFC,SAAS,WAAD,OAAaJ,GACrBK,MAAO,CACLC,KAAMnB,EAASiB,WALrB,UASE,qBACEG,IAAG,UAvBF,mCAuBE,OAAcR,GACjBS,IAAI,GACJC,MAAM,MACNC,OAAO,QAET,4BAAId,QAhBCI,a,8ECdnBW,IAAMC,SAASC,QALE,gCAMjBF,IAAMC,SAASE,OAAS,CACtBC,QANc,mCAOdC,SAAU,SAGZ,IAoEMC,EAAM,CACV1B,8BArEiC,uCAAG,gCAAA2B,EAAA,sEAE5BC,EAAS,CACbC,IAAI,sBAH4B,SAMXT,IAAMQ,GANK,uBAM1BE,EAN0B,EAM1BA,KAN0B,kBAO3BA,EAAKC,SAPsB,gCASlC,IAAIC,MAAM,aATwB,yDAAH,qDAsEjCC,YAzDe,uCAAG,WAAMC,GAAN,mBAAAP,EAAA,yDACbO,EADa,iEAKVN,EAAS,CACbC,IAAI,eACJN,OAAQ,CACNW,UARY,SAWOd,IAAMQ,GAXb,uBAWRE,EAXQ,EAWRA,KAXQ,kBAYTA,EAAKC,SAZI,kCAchB,IAAIC,MAAM,aAdM,0DAAH,sDA0DfG,kBAxCqB,uCAAG,WAAMC,GAAN,mBAAAT,EAAA,sEAEhBC,EAAS,CACbC,IAAI,SAAD,OAAWO,IAHM,SAMChB,IAAMQ,EAAQQ,GANf,uBAMdN,EANc,EAMdA,KANc,kBAOfA,GAPe,gCAStB,IAAIE,MAAM,aATY,yDAAH,sDAyCrBK,eA5BkB,uCAAG,WAAMD,GAAN,mBAAAT,EAAA,sEAEbC,EAAS,CACbC,IAAI,SAAD,OAAWO,EAAX,aAHc,SAKIhB,IAAMQ,EAAQQ,GALlB,uBAKXN,EALW,EAKXA,KALW,kBAMZA,EAAKQ,MANO,gCAQnB,IAAIN,MAAM,aARS,yDAAH,sDA6BlBO,kBAjBqB,uCAAG,WAAMH,GAAN,mBAAAT,EAAA,sEAEhBC,EAAS,CACbC,IAAI,SAAD,OAAWO,EAAX,aAHiB,SAKChB,IAAMQ,EAAQQ,GALf,uBAKdN,EALc,EAKdA,KALc,kBAMfA,EAAKC,SANU,gCAQtB,IAAIC,MAAM,aARY,yDAAH,uDAoBRN,O,mBCxFfc,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO","file":"static/js/Homepage.07a39ee0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport moviesAPI from '../services/api';\n// import MovieErrorView from '../MovieErrorView/MovieErrorView';\n// import MoviePendingView from '../MoviePendingView/MoviePendingView';\nimport s from '../HomePage/HomePage.module.css';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n  const srcUrl = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n\n  useEffect(() => {\n    moviesAPI.fetchTrendingMovieForHomepage().then(res => setMovies(res));\n  }, []);\n\n  return (\n    <>\n      <p className={s.title}>Trending today</p>\n      <ul className={s.list}>\n        {movies.map(({ poster_path, title, id }) => (\n          <li key={id} className={s.item}>\n            <Link\n              className={s.link}\n              to={{\n                pathname: `/movies/${id}`,\n                state: {\n                  from: location.pathname,\n                },\n              }}\n            >\n              <img\n                src={`${srcUrl}${poster_path}`}\n                alt=\"\"\n                width=\"180\"\n                height=\"240\"\n              />\n              <p>{title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c828b854ef40a7dc6bde47f13c682e4b';\n\n// const HOMEPAGE_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nconst fetchTrendingMovieForHomepage = async () => {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n    };\n\n    const { data } = await axios(config);\n    return data.results;\n  } catch (error) {\n    new Error('Not found');\n  }\n};\n\nconst fetchMovies = async query => {\n  if (!query) {\n    return;\n  }\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query,\n      },\n    };\n    const { data } = await axios(config);\n    return data.results;\n  } catch (error) {\n    new Error('Not found');\n  }\n};\n\nconst fetchMovieDetails = async movie_id => {\n  try {\n    const config = {\n      url: `movie/${movie_id}`,\n    };\n\n    const { data } = await axios(config, movie_id);\n    return data;\n  } catch (error) {\n    new Error('Not found');\n  }\n};\n\nconst fetchMovieCast = async movie_id => {\n  try {\n    const config = {\n      url: `movie/${movie_id}/credits`,\n    };\n    const { data } = await axios(config, movie_id);\n    return data.cast;\n  } catch (error) {\n    new Error('Not found');\n  }\n};\n\nconst fetchReviewsMovie = async movie_id => {\n  try {\n    const config = {\n      url: `movie/${movie_id}/reviews`,\n    };\n    const { data } = await axios(config, movie_id);\n    return data.results;\n  } catch (error) {\n    new Error('Not found');\n  }\n};\n\nconst api = {\n  fetchTrendingMovieForHomepage,\n  fetchMovies,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchReviewsMovie,\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__3J7RG\",\"list\":\"HomePage_list__1l7qB\",\"item\":\"HomePage_item__2s1WA\",\"link\":\"HomePage_link__2p-dV\"};"],"sourceRoot":""}